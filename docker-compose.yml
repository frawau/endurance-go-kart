services:
  appseed-app:
    container_name: appseed_app
    restart: always
    build: .
    environment:
      - DEBUG=False
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - TZ=${TZ}
    volumes:
      - static_volume:/static
    networks:
      - db_network
      - web_network
    depends_on:
      - postgres
      - redis
  redis:
    container_name: redis
    restart: always
    image: "redis:alpine"
    environment:
      - TZ=${TZ}
    networks:
      - db_network
  postgres:
    container_name: postgres
    restart: always
    image: "postgres:13"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=${TZ}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db_network
  # Conditional acme.sh service for automatic SSL certificates
  acme-sh:
    image: neilpang/acme.sh:latest
    container_name: acme_sh
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - LE_WORKING_DIR=/acme.sh
    volumes:
      - acme_data:/acme.sh
      - ssl_certs:/etc/ssl/certs
      - acme_webroot:/var/www/certbot
    command: daemon
    networks:
      - web_network
    profiles:
      - ssl-acme

  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "${APP_PORT:-5085}:80"
      - "443:443"
    environment:
      - TZ=${TZ}
      - SSL_MODE=${SSL_MODE:-none}
      - APP_DOMAIN=${APP_DOMAIN:-localhost}
      - APP_PORT=${APP_PORT:-5085}
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/ssl-setup.sh:/usr/local/bin/ssl-setup.sh:ro
      - ssl_certs:/etc/ssl/certs:ro
      - acme_webroot:/var/www/certbot:ro
      - static_volume:/static
    networks:
      - web_network
    depends_on:
      - appseed-app
    command: ["/usr/local/bin/ssl-setup.sh"]
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
volumes:
  postgres_data:
  static_volume:
  ssl_certs:
  acme_data:
  acme_webroot:
 
